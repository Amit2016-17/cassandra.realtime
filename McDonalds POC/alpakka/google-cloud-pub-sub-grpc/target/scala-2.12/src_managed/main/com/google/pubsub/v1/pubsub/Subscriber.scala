
// Generated by Akka gRPC. DO NOT EDIT.
package com.google.pubsub.v1.pubsub

trait Subscriber {
  
  def createSubscription(in: com.google.pubsub.v1.pubsub.Subscription): scala.concurrent.Future[com.google.pubsub.v1.pubsub.Subscription]
  
  def getSubscription(in: com.google.pubsub.v1.pubsub.GetSubscriptionRequest): scala.concurrent.Future[com.google.pubsub.v1.pubsub.Subscription]
  
  def updateSubscription(in: com.google.pubsub.v1.pubsub.UpdateSubscriptionRequest): scala.concurrent.Future[com.google.pubsub.v1.pubsub.Subscription]
  
  def listSubscriptions(in: com.google.pubsub.v1.pubsub.ListSubscriptionsRequest): scala.concurrent.Future[com.google.pubsub.v1.pubsub.ListSubscriptionsResponse]
  
  def deleteSubscription(in: com.google.pubsub.v1.pubsub.DeleteSubscriptionRequest): scala.concurrent.Future[com.google.protobuf.empty.Empty]
  
  def modifyAckDeadline(in: com.google.pubsub.v1.pubsub.ModifyAckDeadlineRequest): scala.concurrent.Future[com.google.protobuf.empty.Empty]
  
  def acknowledge(in: com.google.pubsub.v1.pubsub.AcknowledgeRequest): scala.concurrent.Future[com.google.protobuf.empty.Empty]
  
  def pull(in: com.google.pubsub.v1.pubsub.PullRequest): scala.concurrent.Future[com.google.pubsub.v1.pubsub.PullResponse]
  
  def streamingPull(in: akka.stream.scaladsl.Source[com.google.pubsub.v1.pubsub.StreamingPullRequest, akka.NotUsed]): akka.stream.scaladsl.Source[com.google.pubsub.v1.pubsub.StreamingPullResponse, akka.NotUsed]
  
  def modifyPushConfig(in: com.google.pubsub.v1.pubsub.ModifyPushConfigRequest): scala.concurrent.Future[com.google.protobuf.empty.Empty]
  
  def listSnapshots(in: com.google.pubsub.v1.pubsub.ListSnapshotsRequest): scala.concurrent.Future[com.google.pubsub.v1.pubsub.ListSnapshotsResponse]
  
  def createSnapshot(in: com.google.pubsub.v1.pubsub.CreateSnapshotRequest): scala.concurrent.Future[com.google.pubsub.v1.pubsub.Snapshot]
  
  def updateSnapshot(in: com.google.pubsub.v1.pubsub.UpdateSnapshotRequest): scala.concurrent.Future[com.google.pubsub.v1.pubsub.Snapshot]
  
  def deleteSnapshot(in: com.google.pubsub.v1.pubsub.DeleteSnapshotRequest): scala.concurrent.Future[com.google.protobuf.empty.Empty]
  
  def seek(in: com.google.pubsub.v1.pubsub.SeekRequest): scala.concurrent.Future[com.google.pubsub.v1.pubsub.SeekResponse]
  
}

object Subscriber {
  val name = "google.pubsub.v1.Subscriber"

  object Serializers {
    import akka.grpc.scaladsl.ScalapbProtobufSerializer
    
    val DeleteSubscriptionRequestSerializer = new ScalapbProtobufSerializer(com.google.pubsub.v1.pubsub.DeleteSubscriptionRequest.messageCompanion)
    
    val StreamingPullRequestSerializer = new ScalapbProtobufSerializer(com.google.pubsub.v1.pubsub.StreamingPullRequest.messageCompanion)
    
    val ModifyAckDeadlineRequestSerializer = new ScalapbProtobufSerializer(com.google.pubsub.v1.pubsub.ModifyAckDeadlineRequest.messageCompanion)
    
    val ListSnapshotsResponseSerializer = new ScalapbProtobufSerializer(com.google.pubsub.v1.pubsub.ListSnapshotsResponse.messageCompanion)
    
    val PullResponseSerializer = new ScalapbProtobufSerializer(com.google.pubsub.v1.pubsub.PullResponse.messageCompanion)
    
    val AcknowledgeRequestSerializer = new ScalapbProtobufSerializer(com.google.pubsub.v1.pubsub.AcknowledgeRequest.messageCompanion)
    
    val ListSubscriptionsResponseSerializer = new ScalapbProtobufSerializer(com.google.pubsub.v1.pubsub.ListSubscriptionsResponse.messageCompanion)
    
    val SubscriptionSerializer = new ScalapbProtobufSerializer(com.google.pubsub.v1.pubsub.Subscription.messageCompanion)
    
    val CreateSnapshotRequestSerializer = new ScalapbProtobufSerializer(com.google.pubsub.v1.pubsub.CreateSnapshotRequest.messageCompanion)
    
    val UpdateSnapshotRequestSerializer = new ScalapbProtobufSerializer(com.google.pubsub.v1.pubsub.UpdateSnapshotRequest.messageCompanion)
    
    val PullRequestSerializer = new ScalapbProtobufSerializer(com.google.pubsub.v1.pubsub.PullRequest.messageCompanion)
    
    val GetSubscriptionRequestSerializer = new ScalapbProtobufSerializer(com.google.pubsub.v1.pubsub.GetSubscriptionRequest.messageCompanion)
    
    val DeleteSnapshotRequestSerializer = new ScalapbProtobufSerializer(com.google.pubsub.v1.pubsub.DeleteSnapshotRequest.messageCompanion)
    
    val ListSubscriptionsRequestSerializer = new ScalapbProtobufSerializer(com.google.pubsub.v1.pubsub.ListSubscriptionsRequest.messageCompanion)
    
    val SnapshotSerializer = new ScalapbProtobufSerializer(com.google.pubsub.v1.pubsub.Snapshot.messageCompanion)
    
    val SeekRequestSerializer = new ScalapbProtobufSerializer(com.google.pubsub.v1.pubsub.SeekRequest.messageCompanion)
    
    val StreamingPullResponseSerializer = new ScalapbProtobufSerializer(com.google.pubsub.v1.pubsub.StreamingPullResponse.messageCompanion)
    
    val UpdateSubscriptionRequestSerializer = new ScalapbProtobufSerializer(com.google.pubsub.v1.pubsub.UpdateSubscriptionRequest.messageCompanion)
    
    val SeekResponseSerializer = new ScalapbProtobufSerializer(com.google.pubsub.v1.pubsub.SeekResponse.messageCompanion)
    
    val ModifyPushConfigRequestSerializer = new ScalapbProtobufSerializer(com.google.pubsub.v1.pubsub.ModifyPushConfigRequest.messageCompanion)
    
    val ListSnapshotsRequestSerializer = new ScalapbProtobufSerializer(com.google.pubsub.v1.pubsub.ListSnapshotsRequest.messageCompanion)
    
    val EmptySerializer = new ScalapbProtobufSerializer(com.google.protobuf.empty.Empty.messageCompanion)
    
  }
}
