// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package com.google.pubsub.v1.pubsub

/** Request for the `Pull` method.
  *
  * @param subscription
  *   The subscription from which messages should be pulled.
  *   Format is `projects/{project}/subscriptions/{sub}`.
  * @param returnImmediately
  *   If this field set to true, the system will respond immediately even if
  *   it there are no messages available to return in the `Pull` response.
  *   Otherwise, the system may wait (for a bounded amount of time) until at
  *   least one message is available, rather than returning no messages. The
  *   client may cancel the request if it does not wish to wait any longer for
  *   the response.
  * @param maxMessages
  *   The maximum number of messages returned for this request. The Pub/Sub
  *   system may return fewer than the number specified.
  */
@SerialVersionUID(0L)
final case class PullRequest(
    subscription: _root_.scala.Predef.String = "",
    returnImmediately: _root_.scala.Boolean = false,
    maxMessages: _root_.scala.Int = 0
    ) extends scalapb.GeneratedMessage with scalapb.Message[PullRequest] with scalapb.lenses.Updatable[PullRequest] {
    @transient
    private[this] var __serializedSizeCachedValue: _root_.scala.Int = 0
    private[this] def __computeSerializedValue(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = subscription
        if (__value != "") {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
        }
      };
      
      {
        val __value = returnImmediately
        if (__value != false) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(2, __value)
        }
      };
      
      {
        val __value = maxMessages
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(3, __value)
        }
      };
      __size
    }
    final override def serializedSize: _root_.scala.Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = subscription
        if (__v != "") {
          _output__.writeString(1, __v)
        }
      };
      {
        val __v = returnImmediately
        if (__v != false) {
          _output__.writeBool(2, __v)
        }
      };
      {
        val __v = maxMessages
        if (__v != 0) {
          _output__.writeInt32(3, __v)
        }
      };
    }
    def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.google.pubsub.v1.pubsub.PullRequest = {
      var __subscription = this.subscription
      var __returnImmediately = this.returnImmediately
      var __maxMessages = this.maxMessages
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __subscription = _input__.readString()
          case 16 =>
            __returnImmediately = _input__.readBool()
          case 24 =>
            __maxMessages = _input__.readInt32()
          case tag => _input__.skipField(tag)
        }
      }
      com.google.pubsub.v1.pubsub.PullRequest(
          subscription = __subscription,
          returnImmediately = __returnImmediately,
          maxMessages = __maxMessages
      )
    }
    def withSubscription(__v: _root_.scala.Predef.String): PullRequest = copy(subscription = __v)
    def withReturnImmediately(__v: _root_.scala.Boolean): PullRequest = copy(returnImmediately = __v)
    def withMaxMessages(__v: _root_.scala.Int): PullRequest = copy(maxMessages = __v)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = subscription
          if (__t != "") __t else null
        }
        case 2 => {
          val __t = returnImmediately
          if (__t != false) __t else null
        }
        case 3 => {
          val __t = maxMessages
          if (__t != 0) __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(subscription)
        case 2 => _root_.scalapb.descriptors.PBoolean(returnImmediately)
        case 3 => _root_.scalapb.descriptors.PInt(maxMessages)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion = com.google.pubsub.v1.pubsub.PullRequest
}

object PullRequest extends scalapb.GeneratedMessageCompanion[com.google.pubsub.v1.pubsub.PullRequest] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[com.google.pubsub.v1.pubsub.PullRequest] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, _root_.scala.Any]): com.google.pubsub.v1.pubsub.PullRequest = {
    _root_.scala.Predef.require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
    val __fields = javaDescriptor.getFields
    com.google.pubsub.v1.pubsub.PullRequest(
      __fieldsMap.getOrElse(__fields.get(0), "").asInstanceOf[_root_.scala.Predef.String],
      __fieldsMap.getOrElse(__fields.get(1), false).asInstanceOf[_root_.scala.Boolean],
      __fieldsMap.getOrElse(__fields.get(2), 0).asInstanceOf[_root_.scala.Int]
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.google.pubsub.v1.pubsub.PullRequest] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      com.google.pubsub.v1.pubsub.PullRequest(
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Boolean]).getOrElse(false),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Int]).getOrElse(0)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = PubsubProto.javaDescriptor.getMessageTypes.get(20)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = PubsubProto.scalaDescriptor.messages(20)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = com.google.pubsub.v1.pubsub.PullRequest(
  )
  implicit class PullRequestLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, com.google.pubsub.v1.pubsub.PullRequest]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, com.google.pubsub.v1.pubsub.PullRequest](_l) {
    def subscription: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.subscription)((c_, f_) => c_.copy(subscription = f_))
    def returnImmediately: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.returnImmediately)((c_, f_) => c_.copy(returnImmediately = f_))
    def maxMessages: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.maxMessages)((c_, f_) => c_.copy(maxMessages = f_))
  }
  final val SUBSCRIPTION_FIELD_NUMBER = 1
  final val RETURN_IMMEDIATELY_FIELD_NUMBER = 2
  final val MAX_MESSAGES_FIELD_NUMBER = 3
  def of(
    subscription: _root_.scala.Predef.String,
    returnImmediately: _root_.scala.Boolean,
    maxMessages: _root_.scala.Int
  ): _root_.com.google.pubsub.v1.pubsub.PullRequest = _root_.com.google.pubsub.v1.pubsub.PullRequest(
    subscription,
    returnImmediately,
    maxMessages
  )
}
