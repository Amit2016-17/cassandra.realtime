
// Generated by Akka gRPC. DO NOT EDIT.
package com.google.longrunning;

import akka.annotation.*;
import akka.grpc.internal.*;
import akka.grpc.GrpcClientSettings;
import akka.grpc.javadsl.AkkaGrpcClient;
import akka.grpc.javadsl.SingleResponseRequestBuilder;
import akka.grpc.javadsl.StreamResponseRequestBuilder;
import akka.stream.ActorMaterializer;
import akka.stream.Materializer;
import akka.stream.OverflowStrategy;

import io.grpc.ManagedChannel;
import io.grpc.MethodDescriptor;

import static com.google.longrunning.Operations.Serializers.*;

import scala.concurrent.ExecutionContext;
import scala.compat.java8.FutureConverters;

public abstract class OperationsClient extends OperationsClientPowerApi implements Operations, AkkaGrpcClient {
  public static final OperationsClient create(GrpcClientSettings settings, Materializer mat, ExecutionContext ec) {
    return new DefaultOperationsClient(settings, mat, ec);
  }

  protected final static class DefaultOperationsClient extends OperationsClient {

      private final ClientState clientState;
      private final GrpcClientSettings settings;
      private final io.grpc.CallOptions options;
      private final Materializer mat;
      private final ExecutionContext ec;

      private DefaultOperationsClient(GrpcClientSettings settings, Materializer mat, ExecutionContext ec) {
        this.settings = settings;
        this.mat = mat;
        this.ec = ec;
        this.clientState = new ClientState(settings, mat, ec);
        this.options = NettyClientUtils.callOptions(settings);

        if (mat instanceof ActorMaterializer) {
          ((ActorMaterializer) mat).system().getWhenTerminated().whenComplete((v, e) -> close());
        }
      }

  
    
      private final SingleResponseRequestBuilder<com.google.longrunning.ListOperationsRequest, com.google.longrunning.ListOperationsResponse> listOperationsRequestBuilder(scala.concurrent.Future<ManagedChannel> channel){
        return new JavaUnaryRequestBuilder<>(listOperationsDescriptor, channel, options, settings, ec);
      }
    
  
    
      private final SingleResponseRequestBuilder<com.google.longrunning.GetOperationRequest, com.google.longrunning.Operation> getOperationRequestBuilder(scala.concurrent.Future<ManagedChannel> channel){
        return new JavaUnaryRequestBuilder<>(getOperationDescriptor, channel, options, settings, ec);
      }
    
  
    
      private final SingleResponseRequestBuilder<com.google.longrunning.DeleteOperationRequest, com.google.protobuf.Empty> deleteOperationRequestBuilder(scala.concurrent.Future<ManagedChannel> channel){
        return new JavaUnaryRequestBuilder<>(deleteOperationDescriptor, channel, options, settings, ec);
      }
    
  
    
      private final SingleResponseRequestBuilder<com.google.longrunning.CancelOperationRequest, com.google.protobuf.Empty> cancelOperationRequestBuilder(scala.concurrent.Future<ManagedChannel> channel){
        return new JavaUnaryRequestBuilder<>(cancelOperationDescriptor, channel, options, settings, ec);
      }
    
  

      

        /**
         * For access to method metadata use the parameterless version of listOperations
         */
        public java.util.concurrent.CompletionStage<com.google.longrunning.ListOperationsResponse> listOperations(com.google.longrunning.ListOperationsRequest request) {
          return listOperations().invoke(request);
        }

        /**
         * Lower level "lifted" version of the method, giving access to request metadata etc.
         * prefer listOperations(com.google.longrunning.ListOperationsRequest) if possible.
         */
        
          public SingleResponseRequestBuilder<com.google.longrunning.ListOperationsRequest, com.google.longrunning.ListOperationsResponse> listOperations()
        
        {
          return clientState.withChannel( this::listOperationsRequestBuilder);
        }
      

        /**
         * For access to method metadata use the parameterless version of getOperation
         */
        public java.util.concurrent.CompletionStage<com.google.longrunning.Operation> getOperation(com.google.longrunning.GetOperationRequest request) {
          return getOperation().invoke(request);
        }

        /**
         * Lower level "lifted" version of the method, giving access to request metadata etc.
         * prefer getOperation(com.google.longrunning.GetOperationRequest) if possible.
         */
        
          public SingleResponseRequestBuilder<com.google.longrunning.GetOperationRequest, com.google.longrunning.Operation> getOperation()
        
        {
          return clientState.withChannel( this::getOperationRequestBuilder);
        }
      

        /**
         * For access to method metadata use the parameterless version of deleteOperation
         */
        public java.util.concurrent.CompletionStage<com.google.protobuf.Empty> deleteOperation(com.google.longrunning.DeleteOperationRequest request) {
          return deleteOperation().invoke(request);
        }

        /**
         * Lower level "lifted" version of the method, giving access to request metadata etc.
         * prefer deleteOperation(com.google.longrunning.DeleteOperationRequest) if possible.
         */
        
          public SingleResponseRequestBuilder<com.google.longrunning.DeleteOperationRequest, com.google.protobuf.Empty> deleteOperation()
        
        {
          return clientState.withChannel( this::deleteOperationRequestBuilder);
        }
      

        /**
         * For access to method metadata use the parameterless version of cancelOperation
         */
        public java.util.concurrent.CompletionStage<com.google.protobuf.Empty> cancelOperation(com.google.longrunning.CancelOperationRequest request) {
          return cancelOperation().invoke(request);
        }

        /**
         * Lower level "lifted" version of the method, giving access to request metadata etc.
         * prefer cancelOperation(com.google.longrunning.CancelOperationRequest) if possible.
         */
        
          public SingleResponseRequestBuilder<com.google.longrunning.CancelOperationRequest, com.google.protobuf.Empty> cancelOperation()
        
        {
          return clientState.withChannel( this::cancelOperationRequestBuilder);
        }
      

      
        private static MethodDescriptor<com.google.longrunning.ListOperationsRequest, com.google.longrunning.ListOperationsResponse> listOperationsDescriptor =
          MethodDescriptor.<com.google.longrunning.ListOperationsRequest, com.google.longrunning.ListOperationsResponse>newBuilder()
            .setType(
   MethodDescriptor.MethodType.UNARY 
  
  
  
)
            .setFullMethodName(MethodDescriptor.generateFullMethodName("google.longrunning.Operations", "ListOperations"))
            .setRequestMarshaller(new ProtoMarshaller<com.google.longrunning.ListOperationsRequest>(ListOperationsRequestSerializer))
            .setResponseMarshaller(new ProtoMarshaller<com.google.longrunning.ListOperationsResponse>(ListOperationsResponseSerializer))
            .setSampledToLocalTracing(true)
            .build();
        
        private static MethodDescriptor<com.google.longrunning.GetOperationRequest, com.google.longrunning.Operation> getOperationDescriptor =
          MethodDescriptor.<com.google.longrunning.GetOperationRequest, com.google.longrunning.Operation>newBuilder()
            .setType(
   MethodDescriptor.MethodType.UNARY 
  
  
  
)
            .setFullMethodName(MethodDescriptor.generateFullMethodName("google.longrunning.Operations", "GetOperation"))
            .setRequestMarshaller(new ProtoMarshaller<com.google.longrunning.GetOperationRequest>(GetOperationRequestSerializer))
            .setResponseMarshaller(new ProtoMarshaller<com.google.longrunning.Operation>(OperationSerializer))
            .setSampledToLocalTracing(true)
            .build();
        
        private static MethodDescriptor<com.google.longrunning.DeleteOperationRequest, com.google.protobuf.Empty> deleteOperationDescriptor =
          MethodDescriptor.<com.google.longrunning.DeleteOperationRequest, com.google.protobuf.Empty>newBuilder()
            .setType(
   MethodDescriptor.MethodType.UNARY 
  
  
  
)
            .setFullMethodName(MethodDescriptor.generateFullMethodName("google.longrunning.Operations", "DeleteOperation"))
            .setRequestMarshaller(new ProtoMarshaller<com.google.longrunning.DeleteOperationRequest>(DeleteOperationRequestSerializer))
            .setResponseMarshaller(new ProtoMarshaller<com.google.protobuf.Empty>(EmptySerializer))
            .setSampledToLocalTracing(true)
            .build();
        
        private static MethodDescriptor<com.google.longrunning.CancelOperationRequest, com.google.protobuf.Empty> cancelOperationDescriptor =
          MethodDescriptor.<com.google.longrunning.CancelOperationRequest, com.google.protobuf.Empty>newBuilder()
            .setType(
   MethodDescriptor.MethodType.UNARY 
  
  
  
)
            .setFullMethodName(MethodDescriptor.generateFullMethodName("google.longrunning.Operations", "CancelOperation"))
            .setRequestMarshaller(new ProtoMarshaller<com.google.longrunning.CancelOperationRequest>(CancelOperationRequestSerializer))
            .setResponseMarshaller(new ProtoMarshaller<com.google.protobuf.Empty>(EmptySerializer))
            .setSampledToLocalTracing(true)
            .build();
        

      /**
       * Initiates a shutdown in which preexisting and new calls are cancelled.
       */
      public java.util.concurrent.CompletionStage<akka.Done> close() {
        return clientState.closeCS() ;
      }

     /**
      * Returns a CompletionState that completes successfully when shutdown via close()
      * or exceptionally if a connection can not be established after maxConnectionAttempts.
      */
      public java.util.concurrent.CompletionStage<akka.Done> closed() {
        return clientState.closedCS();
      }
  }

}



